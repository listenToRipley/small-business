{"version":3,"sources":["components/DeleteBusiness.js","components/CookieReader.js","components/Listings.js","components/LogIn.js","components/AddBusiness.js","containers/AddBusiness.js","redux/actions.js","containers/Listings.js","components/Business.js","containers/Business.js","Routes.js","components/NavBar.js","redux/reducer.js","redux/store.js","redux/state.js","App.js","serviceWorker.js","index.js"],"names":["DeleteBusiness","props","IconButton","onClick","e","deleteBusiness","index","aria-label","aria-controls","aria-haspopup","style","color","CookieReader","cookies","cookie","parse","document","status","JSON","businessCookies","loggedIn","className","username","Listings","Container","maxWidth","Table","TableHead","TableRow","TableCell","TableBody","businesses","map","business","key","id","component","scope","to","LogIn","state","password","handleText","target","name","value","setState","preventDefault","stringify","window","location","replace","this","user","onSubmit","TextField","required","onChange","label","type","Button","variant","Component","AddBusiness","open","address","hours","description","handleTextChange","newState","handleSubmit","payload","numOfBusinesses","length","addBusiness","DialogTitle","DialogContent","placeholder","Paper","connect","dispatch","Business","businessId","parseInt","match","params","substring","find","b","ProtectedRoute","rest","render","checkAuth","pathname","Router","exact","path","NavBar","useState","setLoggedIn","setUsername","AppBar","position","background","Typography","flexGrow","maxAge","combineReducers","action","splice","users","createStore","reducer","email","applyMiddleware","thunk","App","store","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gZAwBeA,EApBS,SAACC,GAKvB,OACE,6BACE,kBAACC,EAAA,EAAD,CACAC,QAPiB,SAACC,GACpBH,EAAMI,eAAeJ,EAAMK,QAOzBC,aAAW,SACXC,gBAAc,kBACdC,gBAAc,SACZ,kBAAC,IAAD,CACEC,MAAO,CAACC,MAAO,Y,QCFVC,G,MAZM,WACrB,IAAMC,EAAWC,IAAOC,MAAMC,SAASF,QACjCG,EAASC,KAAKH,MAAMF,EAAQM,iBAChC,IAAqB,IAAlBF,EAAOG,SACR,OACE,yBAAKC,UAAU,kBACb,iDAAuBJ,EAAOK,aCoDvBC,EA9CE,SAACtB,GAChB,IAAMY,EAAWC,IAAOC,MAAMC,SAASF,QACjCG,EAASC,KAAKH,MAAMF,EAAQM,iBAEhC,OACE,6BACE,kBAAC,EAAD,MACA,kBAACK,EAAA,EAAD,CAAWC,SAAS,KAAKJ,UAAU,oBACnC,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,oBACA,kBAACA,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,gBACCZ,EACD,kBAACY,EAAA,EAAD,eAAgC,OAIpC,kBAACC,EAAA,EAAD,KACC7B,EAAM8B,WAAWC,KAAI,SAACC,EAAU3B,GAC7B,OACA,kBAACsB,EAAA,EAAD,CAAUM,IAAKD,EAASE,IACtB,kBAACN,EAAA,EAAD,CAAWO,UAAU,KAAKC,MAAM,OAC9B,kBAAC,IAAD,CAAMF,GAAIF,EAASE,GAAIG,GAAE,qBAAgBL,EAASE,KAAOF,EAAQ,OAEnE,kBAACJ,EAAA,EAAD,KAAYI,EAAQ,aACpB,kBAACJ,EAAA,EAAD,KAAYI,EAAQ,OACpB,kBAACJ,EAAA,EAAD,KAAYI,EAAQ,SACrBhB,GACD,kBAACY,EAAA,EAAD,KACA,kBAAC,EAAD,CAAgBxB,eAAgBJ,EAAMI,eACtCC,MAAOA,c,kBCcNiC,E,4MAxDbC,MAAQ,CACNlB,SAAU,GACVmB,SAAU,GACVrB,UAAU,G,EAGZsB,WAAa,SAAAtC,GACX,IAAMoC,EAAK,eAAO,EAAKA,OACvBA,EAAMpC,EAAEuC,OAAOC,MAAQxC,EAAEuC,OAAOE,MAChC,EAAKC,SAASN,I,EAGhBpB,SAAW,SAAAhB,GACTA,EAAE2C,iBACF/B,SAASF,OAAS,mBAAmBI,KAAK8B,UAAU,CAClD,SAAW,EAAKR,MAAMlB,SACtB,UAAW,EACX,OAAU,MAEZ2B,OAAOC,SAASC,QAAQ,c,uDAIxB,OAAOC,KAAKZ,MAAMpB,SAAW,kBAAC,EAAD,CAAUiC,KAAMD,KAAKZ,MAAMlB,SAAUF,SAAUgC,KAAKZ,MAAMpB,WACrF,6BACI,kBAACI,EAAA,EAAD,KACE,0BAAMH,UAAU,WAAWiC,SAAUF,KAAKhC,UACxC,kBAACmC,EAAA,EAAD,CACEC,UAAQ,EACRC,SAAUL,KAAKV,WACfG,MAAOO,KAAKZ,MAAMlB,SAClBsB,KAAK,WACLc,MAAM,YACNC,KAAK,SACL,kBAACJ,EAAA,EAAD,CACEC,UAAQ,EACRC,SAAUL,KAAKV,WACfG,MAAOO,KAAKZ,MAAMC,SAClBG,KAAK,WACLc,MAAM,YACNC,KAAK,aACL,kBAACC,EAAA,EAAD,CACAD,KAAK,SACLtC,UAAU,cACVwC,QAAQ,YACRlD,MAAM,UACNW,SAAU8B,KAAKZ,MAAMlB,UALrB,gB,GA1CEwC,a,kCCwFLC,E,4MAjFbvB,MAAQ,CACNwB,MAAM,EACNpB,KAAM,GACNqB,QAAS,GACTC,MAAO,GACPC,YAAa,I,EAGfC,iBAAmB,SAAChE,GAChB,IAAMiE,EAAQ,eAAQ,EAAK7B,OAC3B6B,EAASjE,EAAEuC,OAAOR,IAAM/B,EAAEuC,OAAOE,MACjC,EAAKC,SAASuB,I,EAGlBC,aAAe,SAAClE,GACZA,EAAE2C,iBACF,IAAMwB,EAAO,eAAQ,EAAK/B,OACpBgC,EAAkB,EAAKvE,MAAM8B,WAAW0C,OAC9CF,EAAQpC,GAAKqC,EAAgB,SACtBD,EAAQP,KAEf,EAAK/D,MAAMyE,YAAYH,GACvB,EAAKzB,SAAS,CACV,KAAQ,GACR,QAAW,GACX,MAAS,GACT,YAAe,M,uDAKrB,OACE,kBAAC,WAAD,KACA,kBAAC,EAAD,MACA,kBAAC6B,EAAA,EAAD,qBACE,6BACI,kBAACC,EAAA,EAAD,CAAevD,UAAU,mBACvB,0BACAiC,SAAUF,KAAKkB,aACfjD,UAAU,mBACV,kBAACkC,EAAA,EAAD,CACEpB,GAAG,OACH0C,YAAY,gBACZhC,MAAOO,KAAKZ,MAAMI,KAClBa,SAAUL,KAAKgB,iBACfZ,UAAQ,IAER,kBAACD,EAAA,EAAD,CACApB,GAAG,UACH0C,YAAY,UACZhC,MAAOO,KAAKZ,MAAMyB,QAClBR,SAAUL,KAAKgB,iBACfZ,UAAQ,IAER,kBAACD,EAAA,EAAD,CACApB,GAAG,QACH0C,YAAY,iBACZhC,MAAOO,KAAKZ,MAAM0B,MAClBT,SAAUL,KAAKgB,mBAEf,kBAACb,EAAA,EAAD,CACApB,GAAG,cACH0C,YAAY,uBACZhC,MAAOO,KAAKZ,MAAM2B,YAClBV,SAAUL,KAAKgB,iBACfZ,UAAQ,IAEV,kBAACI,EAAA,EAAD,CAAQvC,UAAU,SAASwC,QAAQ,YAAYlD,MAAM,UAAUgD,KAAK,UAApE,SAEA,kBAACnC,EAAA,EAAD,CAAWH,UAAU,UACnB,kBAACyD,EAAA,EAAD,oB,GAvEUhB,aCKXiB,eAZS,SAACvC,GACvB,MAAO,CACLT,WAAYS,EAAMT,eAIG,SAACiD,GACxB,MAAO,CACLN,YAAa,SAACzC,GAAD,OAAc+C,ECLJ,SAAC/C,GAC1B,MAAO,CACL0B,KAAM,eACNd,MAAOZ,GDE6ByC,CAAYzC,QAIrC8C,CAA2ChB,GEE3CgB,eAbS,SAACvC,GACvB,MAAO,CACLlB,SAAUkB,EAAMlB,SAChBS,WAAYS,EAAMT,eAIK,SAACiD,GAC1B,MAAO,CACL3E,eAAgB,SAACC,GAAD,OAAW0E,EDAD,SAAC1E,GAC7B,MAAM,CACJqD,KAAM,kBACNd,MAAOvC,GCH6BD,CAAeC,QAIxCyE,CAA6CxD,GCO7C0D,EApBE,SAAChF,GACd,IAAMiF,EAAaC,SAASlF,EAAMmF,MAAMC,OAAOlD,GAAGmD,UAAU,GAAI,IAC1DrD,EAAWhC,EAAM8B,WAAWwD,MAAK,SAACC,GAAD,OAAOA,EAAErD,KAAO+C,KAEzD,OACE,kBAAC,WAAD,KACI,kBAAC,EAAD,MACA,kBAAC1D,EAAA,EAAD,CAAWC,SAAS,KAAKJ,UAAU,qBAC/B,kBAACyD,EAAA,EAAD,CAAOzD,UAAU,iBACb,wBAAIA,UAAU,oBAAoBY,EAASW,MAC3C,wBAAIvB,UAAU,oBAAoBY,EAASgC,SAC3C,wBAAI5C,UAAU,oBAAoBY,EAASiC,OAC3C,uBAAG7C,UAAU,oBAAoBY,EAASkC,aAC1C,yBAAK9C,UAAU,OAAf,cCTD0D,eANS,SAACvC,GACvB,MAAO,CACLT,WAAYS,EAAMT,cAIPgD,CAAyBE,GCKlCQ,EAAiB,SAAC,GAAqC,IAAzB3B,EAAwB,EAAnC1B,UAAyBsD,EAAU,6BAC1D,OACI,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAAC1F,GAAD,OAVA,WACd,IAAMY,EAAUC,IAAOC,MAAMC,SAASF,QAEtC,QADeI,KAAKH,MAAMF,EAAQM,iBAAiBC,SAQ1BwE,GAAc,kBAAC9B,EAAc7D,GAAW,kBAAC,IAAD,CAAUqC,GAAI,CAACuD,SAAS,YAiB9EC,EAZA,WAEX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAI5D,UAAWG,IACjC,kBAAC,IAAD,CAAOyD,KAAK,YAAY5D,UAAWb,IACnC,kBAAC,IAAD,CAAOyE,KAAK,gBAAgB5D,UAAW6C,IACvC,kBAAC,EAAD,CAAgBe,KAAK,gBAAgB5D,UAAW2B,M,kCCtBtDlD,EAAWC,IAAOC,MAAMC,SAASF,QACjCG,EAASJ,EAAQM,gBAkDR8E,EA/CA,WAAO,IAAD,EAEcC,qBAASjF,GAAgB,MAFvC,mBAEZG,EAFY,KAEF+E,EAFE,OAGcD,mBAASjF,EAAQA,EAAOK,SAAW,MAHjD,mBAGF8E,GAHE,WAYnB,OACE,kBAACC,EAAA,EAAD,CAAQC,SAAS,SAAS5F,MAAO,CAAC6F,WAAY,YAC5C,kBAAC,IAAD,KAEE,kBAACC,EAAA,EAAD,CAAY3C,QAAQ,KAAKnD,MAAO,CAAC+F,SAAU,MAA3C,kBAEA,wBAAIpF,UAAU,WAEZ,wBAAIA,UAAU,eACZ,kBAAC,IAAD,CAAMiB,GAAG,aAAT,cAGU,IAAXlB,EACD,6BACA,wBAAIC,UAAU,eACV,kBAAC,IAAD,CAAMiB,GAAG,iBAAT,iBAGF,wBAAIjB,UAAU,eACZ,kBAAC,IAAD,CAAMlB,QAzBG,WACnBgG,EAAYtF,EAAQO,UAAW,GAC/BgF,EAAYvF,EAAQS,SAAW,MAC/BT,EAAQ6F,OAAS,MAsBsBpE,GAAG,KAAhC,aAIJ,wBAAIjB,UAAU,eACZ,kBAAC,IAAD,CAAMiB,GAAG,KAAT,e,gBCXGqE,cAAgB,CAACvF,SAnCf,eAACoB,EAAD,+DAAmBA,GAmCMT,WAjCvB,WAAyB,IAAxBS,EAAuB,uDAAf,GAAIoE,EAAW,uCACzC,OAAOA,EAAOjD,MACZ,IAAK,eACH,MAAM,GAAN,mBAAWnB,GAAX,CAAkBoE,EAAO/D,QAC3B,IAAK,kBACH,IAAMd,EAAU,YAAOS,GAEvB,OADAT,EAAW8E,OAAOD,EAAO/D,MAAO,GACzBd,EACT,QACE,OAAOS,IAwByCsE,MApBxC,WAAyB,IAAZF,EAAW,uCACrC,OAAOA,EAAOjD,MACZ,IAAK,WACH,OAAOiD,EAAO/D,MACf,QACE,OAAO,S,QCjBEkE,eAAYC,ECLZ,CACb5F,UAAU,EACV0F,MAAO,CACLxF,SAAU,GACV2F,MAAO,GACPxE,SAAU,IAEZV,WAAY,IDF6BmF,YAAgBC,MEc5CC,GAXH,WACV,OACE,kBAAC,IAAD,CAAUC,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCDYC,QACW,cAA7BrE,OAAOC,SAASqE,UAEe,UAA7BtE,OAAOC,SAASqE,UAEhBtE,OAAOC,SAASqE,SAASnC,MACvB,2DCVNoC,IAAS7B,OACH,kBAAC,IAAD,CAAU0B,MAAOA,IACf,kBAAC,GAAD,OAENrG,SAASyG,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e8426bbb.chunk.js","sourcesContent":["import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nconst DeleteBusiness  = (props) => {\n  const handleDelete = (e) => {\n    props.deleteBusiness(props.index)\n  }\n\n  return(\n    <div>\n      <IconButton\n      onClick={handleDelete}\n      aria-label='delete'\n      aria-controls='delete-business'\n      aria-haspopup='false' >\n        <DeleteForeverIcon \n          style={{color: 'red'}}\n          />\n      </IconButton>\n    </div>\n  )\n}\n\nexport default DeleteBusiness","import React from 'react';\nimport cookie from 'cookie';\n\nconst CookieReader = () => {\nconst cookies = (cookie.parse(document.cookie))\nconst status = JSON.parse(cookies.businessCookies)\n  if(status.loggedIn===true) {\n    return (\n      <div className='cookieGreeting'>\n        <p>Logged in as user: {status.username}</p>\n      </div>\n    )\n  }\n}\n\nexport default CookieReader;","import React from 'react'\nimport {\n    Container,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow\n} from '@material-ui/core'\nimport DeleteBusiness from './DeleteBusiness'\nimport cookie from 'cookie';\nimport { Link } from 'react-router-dom'\nimport './componentcss.css'\nimport CookiesReader from './CookieReader'\n\nconst Listings = (props) => {\n  const cookies = (cookie.parse(document.cookie))\n  const status = JSON.parse(cookies.businessCookies)\n \n    return (\n      <div>\n        <CookiesReader/>\n        <Container maxWidth='lg' className='listingContainer'>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Hours</TableCell>\n              <TableCell>Address</TableCell>\n              {status? \n              <TableCell>Action</TableCell> : null\n              }\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {props.businesses.map((business, index) => {\n              return (\n              <TableRow key={business.id}>\n                <TableCell component='th' scope='row' >\n                  <Link id={business.id} to={`/business/:${business.id}`}>{business['name']}</Link>\n                </TableCell>\n                <TableCell>{business['description']}</TableCell>\n                <TableCell>{business['hours']}</TableCell>\n                <TableCell>{business['address']}</TableCell>\n              {status && (\n              <TableCell>\n              <DeleteBusiness deleteBusiness={props.deleteBusiness} \n              index={index}/>\n              </TableCell>\n              )}\n              </TableRow>\n            )\n            })}\n          </TableBody>\n        </Table>\n      </Container>\n      </div>\n    )\n}\n\nexport default Listings","import React, {Component} from 'react';\nimport Listings from './Listings';\nimport { Container, Button, TextField } from '@material-ui/core';\nimport './componentcss.css'\n\nclass LogIn extends Component { \n  state = {\n    username: '',\n    password: '',\n    loggedIn: false//would like to pull in from the store. \n  }\n\n  handleText = e => {\n    const state = {...this.state}\n    state[e.target.name] = e.target.value\n    this.setState(state)\n  }\n\n  loggedIn = e => {\n    e.preventDefault()\n    document.cookie = \"businessCookies=\"+JSON.stringify({\n      \"username\":this.state.username,\n      \"loggedIn\":true,\n      \"maxAge\":(60*10000)\n    })\n    window.location.replace('/listings')\n  }\n\n  render() {\n    return this.state.loggedIn ? <Listings user={this.state.username} loggedIn={this.state.loggedIn}/> : (\n      <div>\n          <Container>\n            <form className='loggedIn' onSubmit={this.loggedIn}>\n              <TextField\n                required\n                onChange={this.handleText}\n                value={this.state.username}\n                name=\"username\"\n                label=\"*Username\"\n                type=\"text\"/>\n                <TextField\n                  required\n                  onChange={this.handleText}\n                  value={this.state.password}\n                  name=\"password\"\n                  label=\"*Password\"\n                  type=\"password\"/>\n                  <Button\n                  type=\"submit\"\n                  className=\"loggedInBtn\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  username={this.state.username}>\n                    Login\n                  </Button>\n            </form>\n          </Container>\n      </div>\n    )\n  }\n}\n\nexport default LogIn;","import React, { Component, Fragment } from 'react'\nimport {\n    Container,\n    Paper,\n    Button,\n    TextField,\n    DialogContent,\n    DialogTitle\n} from '@material-ui/core';\nimport CookieReader from './CookieReader'\n\nclass AddBusiness extends Component {\n  state = {\n    open: true, \n    name: '',\n    address: '',\n    hours: '',\n    description: ''\n  }\n\n  handleTextChange = (e) => {\n      const newState = { ...this.state }\n      newState[e.target.id] = e.target.value\n      this.setState(newState)\n  }\n\n  handleSubmit = (e) => {\n      e.preventDefault()\n      const payload = { ...this.state }\n      const numOfBusinesses = this.props.businesses.length\n      payload.id = numOfBusinesses+1\n      delete payload.open\n      // console.log(\"THE BUSINESS\", payload)\n      this.props.addBusiness(payload)\n      this.setState({ \n          'name': '',\n          'address': '',\n          'hours': '',\n          'description': ''\n       })\n    }\n\n  render() {\n    return(\n      <Fragment>\n      <CookieReader/>\n      <DialogTitle>Add Business</DialogTitle>\n        <div>\n            <DialogContent className='addBusinessBody'> \n              <form\n              onSubmit={this.handleSubmit}\n              className='addBusinessForm'>\n              <TextField\n                id='name'\n                placeholder='Business Name'\n                value={this.state.name}\n                onChange={this.handleTextChange}\n                required\n              />\n                <TextField\n                id='address'\n                placeholder='Address'\n                value={this.state.address}\n                onChange={this.handleTextChange}\n                required\n              />\n                <TextField\n                id='hours'\n                placeholder='Business Hours'\n                value={this.state.hours}\n                onChange={this.handleTextChange}\n              />\n                <TextField\n                id='description'\n                placeholder='Business Description'\n                value={this.state.description}\n                onChange={this.handleTextChange}\n                required\n              />\n              <Button className='addBtn' variant='contained' color='primary' type='submit' >SAVE</Button>\n              </form>\n              <Container className='addMap'>\n                <Paper>MAP</Paper>\n             </Container>\n            </DialogContent>\n            \n        </div>\n      </Fragment>\n    )\n  }\n\n}\n\nexport default AddBusiness","import {connect} from 'react-redux';\nimport AddBusiness from '../components/AddBusiness';\nimport {addBusiness} from '../redux/actions'\n\nconst mapStateToProps = (state) => {\n  return {\n    businesses: state.businesses\n  }\n}\n\nconst mapDispatchProps = (dispatch) => {\n  return {\n    addBusiness: (business) => dispatch(addBusiness(business))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchProps)(AddBusiness)","export const loggedIn = (status) => {\n  return {\n    type: 'LOG_IN',\n    value: status\n  }\n}\n\nexport const addBusiness = (business) => {\n  return {\n    type: 'ADD_BUSINESS',\n    value: business \n  }\n}\n\nexport const deleteBusiness = (index) => {\n  return{\n    type: 'DELETE_BUSINESS',\n    value: index\n  }\n}\n\nexport const addUser = (users) => {\n  return{\n    type: 'ADD_USER',\n    value: users\n  }\n}\n\nconst defaultMap = (data) => {\n  return {\n    type:'FETCH_MAP',\n    value: data\n  }\n}\n\nconst createMap = (input) => {\n  return {\n    type: 'FIND_BUSINESS',\n    value: input\n  }\n}\n\nexport const mapApi = (map) => {\n  return (dispatch) => {\n    fetch(`https://maps.google.com/maps/api/geocode/json?key=<${process.env.REACT_APP_GOOGLE_MAP_API_KEY}>&address=1600+Amphitheatre+Parkway,+Mountain+View,+CA`)\n  .then(res => res.json())\n  .then(data => {\n    dispatch({\n      defaultMap, createMap\n    })\n  })\n  }\n}","//must include a function to delete \nimport { connect } from 'react-redux';\nimport Listings from '../components/Listings'\nimport {deleteBusiness} from '../redux/actions'\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.username,\n    businesses: state.businesses\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteBusiness: (index) => dispatch(deleteBusiness(index))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Listings)","import React, { Fragment } from 'react';\nimport {Container, Paper} from '@material-ui/core';\nimport './componentcss.css'\nimport CookieReader from './CookieReader';\n\nconst Business = (props) => {\n    const businessId = parseInt(props.match.params.id.substring(1), 10)\n    const business = props.businesses.find((b) => b.id === businessId)\n\n  return (\n    <Fragment>\n        <CookieReader/>\n        <Container maxWidth=\"sm\" className=\"businessContainer\">\n            <Paper className=\"businessPaper\">\n                <h2 className=\"businessInfoItem\">{business.name}</h2>\n                <h4 className=\"businessInfoItem\">{business.address}</h4>\n                <h4 className=\"businessInfoItem\">{business.hours}</h4>\n                <p className=\"businessInfoItem\">{business.description}</p>\n                <div className=\"map\">   MAP</div>\n            </Paper>\n        </Container>\n    </Fragment>\n)\n}\n\nexport default Business","import {connect} from 'react-redux';\nimport Business from '../components/Business';\n\nconst mapStateToProps = (state) => {\n  return {\n    businesses: state.businesses\n  }\n}\n\nexport default connect(mapStateToProps)(Business)","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router';\nimport cookie from 'cookie';\nimport LogIn from './components/LogIn';\nimport AddBusiness from './containers/AddBusiness'; \nimport Listings from './containers/Listings'; \nimport Business from './containers/Business';\n\nconst checkAuth = () => {\n    const cookies = cookie.parse(document.cookie)\n    const status = JSON.parse(cookies.businessCookies).loggedIn\n    return status ? true : false \n  }\n\nconst ProtectedRoute = ({component: Component, ...rest}) => {\n  return (\n      <Route\n          {...rest}\n          render={(props) => checkAuth() ? <Component {...props}/> : <Redirect to={{pathname:'/'}}/> }\n      />\n  )\n}\n  \nconst Router = () => {\n\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={LogIn} />\n            <Route path=\"/listings\" component={Listings} />\n            <Route path=\"/business/:id\" component={Business} /> \n            <ProtectedRoute path=\"/add_business\" component={AddBusiness}/>\n        </Switch>\n    );\n};\n\nexport default Router;","import React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport './componentcss.css'\nimport cookie from 'cookie'\n\nconst cookies = (cookie.parse(document.cookie))\nconst status = cookies.businessCookies\n\n\nconst NavBar = () => {\n  \n  const [loggedIn, setLoggedIn ] = useState(status ? true : null)\n  const [username, setUsername ] = useState(status? status.username : null)\n\n\n  const handleLogOut = () => {\n    setLoggedIn(cookies.loggedIn = false)\n    setUsername(cookies.username = null)\n    cookies.maxAge = null\n  }\n\n  return (\n    <AppBar position='static' style={{background: '#3bb371'}}>\n      <ToolBar>\n  \n        <Typography variant='h6' style={{flexGrow: '1'}}>Small Business</Typography>\n  \n        <ul className='navList'>\n        \n          <li className='navListItem'>\n            <Link to='/listings'>Listings</Link>\n          </li>\n          \n          {loggedIn===true ?\n          <div>\n          <li className='navListItem'>\n              <Link to='/add_business'>Add Business</Link>  \n            </li>\n            \n            <li className='navListItem'>\n              <Link onClick={handleLogOut} to='/'>Log Out</Link>  \n            </li>\n          </div>\n          : \n          <li className='navListItem'>\n            <Link to='/'>Log In</Link> \n          </li>}\n         \n        </ul>\n        \n      </ToolBar>\n    </AppBar>\n  )\n} \n\n//do I need to reset the cookie? \nexport default NavBar;","import { combineReducers} from 'redux'\n\nconst loggedIn = (state = false) => state\n\nconst businesses = (state = [], action) => {\n  switch(action.type) {\n    case 'ADD_BUSINESS':\n      return [...state, action.value]\n    case 'DELETE_BUSINESS':\n      const businesses = [...state]\n      businesses.splice(action.value, 1)\n      return businesses\n    default:\n      return state\n  }\n}\n\nconst users = (state = [], action) => {\n switch(action.type) {\n   case 'ADD_USER':\n     return action.value\n    default:\n      return null \n }\n}\n\nconst mapAPI = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCH_MAP': \n      return action.value\n    case 'FIND_BUSINESS': \n    //this will need out, since we have to determine the input \n      return action.value\n  }\n  \n}\n\nexport default combineReducers({loggedIn, businesses, users})","import { createStore, applyMiddleware } from 'redux';\nimport reducer from './reducer';\nimport state from './state';\nimport thunk from 'redux-thunk';\n\nexport default createStore(reducer, state, applyMiddleware(thunk))","export default {\n  loggedIn: false,\n  users: {\n    username: '',\n    email: '',\n    password: ''\n  },\n  businesses: []\n}","import React from 'react';\nimport './index.css';\nimport Router from './Routes';\nimport {BrowserRouter} from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport {Provider } from 'react-redux';\nimport store from './redux/store';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <NavBar/>\n        <Router/>\n    </BrowserRouter>\n  </Provider>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n      <Provider store={store}>\n        <App/>\n      </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}